#!/bin/bash
#
# [RClone Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
########### DRIVES
  - name: Check DRIVES Service
    stat:
      path: "/etc/systemd/system/drives.service"
    register: drives

  - name: Stop If DRIVES Service Running
    systemd: state=stopped name=drives
    when: drives.stat.exists

####################################################### REGISTER FIRST
  - name: Register DRIVE1
    shell: "cat /var/plexguide/hd.1"
    register: hd1
    ignore_errors: True

  - name: Register DRIVE2
    shell: "cat /var/plexguide/hd.2"
    register: hd2
    ignore_errors: True

  - name: Register DRIVE3
    shell: "cat /var/plexguide/hd.3"
    register: hd3
    ignore_errors: True

  - name: Register DRIVE4
    shell: "cat /var/plexguide/hd.4"
    register: hd4
    ignore_errors: True
######################################################### REGISTER END

######################################################### COMBINE START
  - name: Combine Paths


    shell: echo "-o defaults,allow_other,direct_io,use_ino,category.create=eplfs,moveonenospc=true,minfreespace=15G,fsname=pgPool {{hd1.stdout}}{{hd2.stdout}}{{hd3.stdout}}{{hd4.stdout}} /mnt/unionfs" > /var/plexguide/hdcommand

  - name: Register Command
    shell: cat "/var/plexguide/hdcommand"
    register: hdcommand

######################################################### COMBINE END

  - name: Install DRIVES Service
    template:
      src: drives.js2
      dest: /etc/systemd/system/drives.service 
      force: yes

  - name: Daemon-Reload
    systemd: state=stopped name=drives daemon_reload=yes enabled=no

  - name: Start DRIVES SERVICES
    systemd: state=started name=drives enabled=yes
    #when: drives.stat.exists