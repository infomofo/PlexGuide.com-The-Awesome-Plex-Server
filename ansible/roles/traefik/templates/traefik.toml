
#!/bin/bash
#
# [PlexGuide Menu]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   DesignGears - Admin9705
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################

# traefik.toml
################################################################
# Global configuration
################################################################

# Log level
#
# Optional
# Default: "ERROR"
# Accepted values, in order of severity: "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "PANIC"
# Messages at and above the selected level will be logged.
#
insecureskipverify = true

logLevel = "WARN"

defaultEntryPoints = ["http", "https"]

[entryPoints]
  [entryPoints.http]
  address = ":80"
  #[entryPoints.http.redirect]
  #  entryPoint = "https"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]

[retry]

# Enable ACME (Let's Encrypt): automatic SSL
[acme]
acmeLogging = true
# Email address used for registration
email = "your@email.com"
# File or key used for certificates storage.
# WARNING, if you use Traefik in Docker, you have 2 options:
#  - create a file on your host and mount it as a volume
#      storageFile = "acme.json"
#      $ docker run -v "/my/host/acme.json:acme.json" traefik
#  - mount the folder containing the file as a volume
#      storageFile = "/etc/traefik/acme/acme.json"
#      $ docker run -v "/my/host/acme:/etc/traefik/acme" traefik
storage = "/etc/traefik/acme/acme.json"
# Entrypoint to proxy acme challenge/apply certificates to.
# WARNING, must point to an entrypoint on port 443
entryPoint = "https"
[acme.httpChallenge]
entryPoint = "http"
# CA server to use
# Uncomment the line to run on the staging let's encrypt server
# Leave comment to go to prod
# caServer = "https://acme-staging.api.letsencrypt.org/directory"
# Enable on demand certificate. This will request a certificate from Let's Encrypt during the first TLS handshake for a hostname that does not yet have a certificate.
# WARNING, TLS handshakes will be slow when requesting a hostname certificate for the first time, this can leads to DoS attacks.
# WARNING, Take note that Let's Encrypt have rate limiting: https://letsencrypt.org/docs/rate-limits
onDemand = false
# Enable certificate generation on frontends Host rules. This will request a certificate from Let's Encrypt for each frontend with a Host rule.
# For example, a rule Host:test1.traefik.io,test2.traefik.io will request a certificate with main domain test1.traefik.io and SAN test2.traefik.io.
OnHostRule = true

[[acme.domains]]
main = "yourdomain.com"
# Make sure these are alphabetical so it's easy to read
sans = [
    "couchpotato.yourdomain.com",
    "deluge.yourdomain.com",
    "delugevpn.yourdomain.com",
    "emby.yourdomain.com",
    "heimdall.yourdomain.com",
    "htpcmanager.yourdomain.com",
    "jackett.yourdomain.com",
    "lidarr.yourdomain.com",
    "medusa.yourdomain.com",
    "muximux.yourdomain.com",
    "mylar.yourdomain.com",
    "netdata.yourdomain.com",
    "nzbget.yourdomain.com",
    "nzbhydra.yourdomain.com",
    "ombi.yourdomain.com",
    "ombi4k.yourdomain.com",
    "organizr.yourdomain.com",
    "plex.yourdomain.com",
    "plexpy.yourdomain.com",
    "portainer.yourdomain.com",
	"pyload.yourdomain.com",
    "radarr.yourdomain.com",
    "radarr4k.yourdomain.com",
    "resilio.yourdomain.com",
    "rtorrentvpn.yourdomain.com",
    "rutorrent.yourdomain.com",
    "sabnzbd.yourdomain.com",
    "sickrage.yourdomain.com",
    "sonarr.yourdomain.com",
    "sonarr4k.yourdomain.com",
    "speed.yourdomain.com",
    "tautulli.yourdomain.com",
    "ubooquity.yourdomain.com",
    "nextcloud.yourdomain.com"
]

# Enable Docker configuration backend
[docker]
# Docker server endpoint. Can be a tcp or a unix socket endpoint.
endpoint = "unix:///var/run/docker.sock"
# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
domain = "yourdomain.com"
# Enable watch docker changes
watch = true
# Expose containers by default in traefik
# If set to false, containers that don't have `traefik.enable=true` will be ignored
exposedbydefault = false
