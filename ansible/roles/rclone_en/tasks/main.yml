#!/bin/bash
#
# [RClone Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq & FlickerRate
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
  - name: RClone Filler
    template:
      src: temp.js2
      dest: /root/.config/rclone/rclone.conf
      force: yes
    tags: rclone_temp

########################################## Remove Old Services

  - name: Remove Old UnionFS-encrypt service
    file:
      state: absent
      path: /etc/systemd/system/unionfs-encrypt.service

  - name: Remove Old move-en service
    file:
      state: absent
      path: /etc/systemd/system/move-en.service

  - name: Remove Old move-en File
    file:
      state: absent
      path: /opt/appdata/plexguide/move-en.sh


  - name: Remove Old rclone service
    file:
      state: absent
      path: /etc/systemd/system/rclone.service

  - name: Remove Old rclone File
    file:
      state: absent
      path: /opt/appdata/plexguide/rclone.sh

  - name: Remove Old rclone-en service
    file:
      state: absent
      path: /etc/systemd/system/rclone-en.service

  - name: Remove Old rclone-en File
    file:
      state: absent
      path: /opt/appdata/plexguide/rclone-en.sh

  - name: Remove Old rclone-encrypt service
    file:
      state: absent
      path: /etc/systemd/system/rclone-encrypt.service

  - name: Remove Old rclone-encrypt File
    file:
      state: absent
      path: /opt/appdata/plexguide/rclone-encrypt.sh

########################################## Scripts
########## Move En Service Script
  - name: Check MOVE EN SCRIPT
    stat:
      path: "/opt/appdata/plexguide/move-en.sh"
    register: move-en_script

  - name: Install Move En Service
    template:
      src: move-en_script.js2"
      dest: /opt/appdata/plexguide/move-en.sh
      force: yes
    when: move_en_script.stat.exists == False
########### Rclone Sync Scripts
  - name: Check RClone Sync SCRIPT
    stat:
      path: "/opt/appdata/plexguide/rclone.sh"
    register: rclone_script

  - name: Install RClone Sync Service
    template:
      src: rclone_script.js2
      dest: /opt/appdata/plexguide/rclone.sh
      force: yes
    when: rclone_script.stat.exists == False
############ Rclone En Sync
  - name: Check RClone En Sync SCRIPT
    stat:
      path: "/opt/appdata/plexguide/rclone-en.sh"
    register: rclone-en_script

  - name: Install RClone En Sync Service
    template:
      src: rclone-en_script.js2
      dest: /opt/appdata/plexguide/rclone-en.sh
      force: yes
    when: rclone_en_script.stat.exists == False
############ Rclone Encrypt Sync
  - name: Check RClone Encrypt Sync SCRIPT
    stat:
      path: "/opt/appdata/plexguide/rclone-encrypt.sh"
    register: rclone-encrypt_script

  - name: Install RClone Encrypt Sync Service
    template:
      src: rclone-encrypt_script.js2
      dest: /opt/appdata/plexguide/rclone-encrypt.sh
      force: yes
    when: rclone_encrypt_script.stat.exists == False

########################################## Services
########### Move En Service
  - name: Check MOVE En Service
    stat:
      path: "/etc/systemd/system/move-en.service"
    register: move-en

  - name: Stop If Move En Service Running
    systemd: state=stopped name=move-en
    when: move-en.stat.exists

  - name: Install Move En Service
    template:
      src: move-en.js2
      dest: /etc/systemd/system/move-en.service
      force: yes
    when: move-en.stat.exists == False

  - name: Daemon-Reload
    systemd: state=stopped name=move-en daemon_reload=yes enabled=no

  - name: Start Move En
    systemd: state=started name=move-en enabled=yes
    when: move_en.stat.exists

########### rclone
  - name: Check RClone Service
    stat:
      path: "/etc/systemd/system/rclone.service"
    register: rclone

  - name: Stop If RClone Service Running
    systemd: state=stopped name=rclone
    when: rclone.stat.exists

  - name: Install RCLONE Service
    template:
      src: rclone.js2
      dest: /etc/systemd/system/rclone.service
      force: yes
    when: rclone.stat.exists == False

  - name: Daemon-Reload
    systemd: state=stopped name=rclone daemon_reload=yes enabled=no

  - name: Start RClone
    systemd: state=started name=rclone enabled=yes
    when: rclone.stat.exists
########### rclone en
  - name: Check RClone En Service
    stat:
      path: "/etc/systemd/system/rclone-en.service"
    register: rclone-en

  - name: Stop If RClone En Service Running
    systemd: state=stopped name=rclone-en
    when: rclone-en.stat.exists

  - name: Install RClone En Service
    template:
      src: rclone-en.js2
      dest: /etc/systemd/system/rclone-en.service
      force: yes
    when: rclone_en.stat.exists == False

  - name: Daemon-Reload
    systemd: state=stopped name=rclone-en daemon_reload=yes enabled=no

  - name: Start RClone En
    systemd: state=started name=rclone-en enabled=yes
    when: rclone_en.stat.exists
########### rclone encrypt
  - name: Check RClone Encrypt Service
    stat:
      path: "/etc/systemd/system/rclone-encrypt.service"
    register: rclone-encrypt

  - name: Stop If RClone Encrypt Service Running
    systemd: state=stopped name=rclone-encrypt
    when: rclone_encrypt.stat.exists

  - name: Install RClone Encrypt Service
    template:
      src: rclone-encrypt.js2
      dest: /etc/systemd/system/rclone-encrypt.service
      force: yes
    when: rclone_encrypt.stat.exists == False

  - name: Daemon-Reload
    systemd: state=stopped name=rclone-encrypt daemon_reload=yes enabled=no

  - name: Start RClone Encrypt
    systemd: state=started name=rclone-encrypt enabled=yes
    when: rclone_encrypt.stat.exists

########### UnionFS Encrypt
  - name: Check UnionFS Encrypt Service
    stat:
      path: "/etc/systemd/system/unionfs-encrypt.service"
    register: unionfs-encrypt

  - name: Stop If UnionFS Encrypt Service Running
    systemd: state=stopped name=unionfs-encrypt
    when: unionfs_encrypt.stat.exists

  - name: Install UnionFS Encrypt Service
    template:
      src: unionfs-encrypt.js2
      dest: /etc/systemd/system/unionfs-encrypt.service
      force: yes
    when: unionfs-encrypt.stat.exists == False

  - name: Daemon-Reload
    systemd: state=stopped name=unionfs-encrypt daemon_reload=yes enabled=no

  - name: Start UnionFS Encrypt
    systemd: state=started name=unionfs-encrypt enabled=yes
    when: unionfs_encrypt.stat.exists
